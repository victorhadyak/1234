#!/bin/bash

# Variables
TERRAFORM_VERSION="1.3.5"
TERRAFORM_ZIP="terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
TERRAFORM_URL="https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_ZIP}"
INSTALL_DIR="/usr/local/bin"
TF_DIR="/tmp/terraform-config"

# Download and install Terraform
echo "Downloading Terraform..."
curl -O ${TERRAFORM_URL}
echo "Installing Terraform..."
unzip ${TERRAFORM_ZIP}
sudo mv terraform ${INSTALL_DIR}
rm ${TERRAFORM_ZIP}

# Verify installation
terraform version

# Export Grafana API token as an environment variable
export TF_VAR_grafana_api_token=$GRAFANA_API_TOKEN

# Create a temporary directory for Terraform configuration
mkdir -p ${TF_DIR}
cd ${TF_DIR}

# Create Terraform configuration file
cat <<EOL > main.tf
provider "grafana" {
  auth = var.grafana_api_token
  url  = "https://your-grafana-instance.com"
}

# Example resource: Create a Grafana Dashboard
resource "grafana_dashboard" "example" {
  config_json = <<JSON
{
  "title": "Example Dashboard",
  "panels": [
    {
      "type": "text",
      "title": "Sample Text Panel",
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "options": {
        "content": "Hello, world!"
      }
    }
  ]
}
JSON
}
EOL

# Create variables file
cat <<EOL > variables.tf
variable "grafana_api_token" {
  type = string
}
EOL

# Create Terraform initialization and apply script
cat <<EOL > apply.sh
#!/bin/bash
terraform init
terraform apply -auto-approve
EOL

# Make the apply script executable
chmod +x apply.sh

# Run the Terraform script
./apply.sh

# Clean up
rm -rf ${TF_DIR}
